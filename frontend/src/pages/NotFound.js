import React, { useEffect, useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { Helmet } from 'react-helmet-async';
import { motion } from 'framer-motion';
import {
  FiHome,
  FiArrowLeft,
  FiSearch,
  FiShoppingBag,
  FiGift
} from 'react-icons/fi';

// Components
import Header from '../components/common/Header';
import Footer from '../components/common/Footer';

// Hooks
import { useProducts } from '../contexts/ProductContext';

const NotFound = () => {
  const navigate = useNavigate();
  const { categories, featuredProducts } = useProducts();
  const [countdown, setCountdown] = useState(10);

  // Auto redirect countdown
  useEffect(() => {
    const timer = setInterval(() => {
      setCountdown(prev => {
        if (prev <= 1) {
          navigate('/');
          return 0;
        }
        return prev - 1;
      });
    }, 1000);

    return () => clearInterval(timer);
  }, [navigate]);

  // Suggested pages
  const suggestions = [
    {
      title: 'Trang ch·ªß',
      description: 'Quay v·ªÅ trang ch·ªß c·ªßa ch√∫ng t√¥i',
      icon: <FiHome className="w-6 h-6" />,
      link: '/',
      color: 'bg-blue-100 text-blue-600'
    },
    {
      title: 'S·∫£n ph·∫©m',
      description: 'Xem t·∫•t c·∫£ s·∫£n ph·∫©m c√≥ s·∫µn',
      icon: <FiShoppingBag className="w-6 h-6" />,
      link: '/products',
      color: 'bg-green-100 text-green-600'
    },
    {
      title: 'Set qu√† n·ªïi b·∫≠t',
      description: 'Kh√°m ph√° c√°c set qu√† ƒë∆∞·ª£c y√™u th√≠ch',
      icon: <FiGift className="w-6 h-6" />,
      link: '/products?featured=true',
      color: 'bg-purple-100 text-purple-600'
    }
  ];

  return (
    <>
      <Helmet>
        <title>Trang kh√¥ng t√¨m th·∫•y - Newborn Gifts</title>
        <meta name="description" content="Trang b·∫°n ƒëang t√¨m ki·∫øm kh√¥ng t·ªìn t·∫°i. Quay v·ªÅ trang ch·ªß ho·∫∑c t√¨m ki·∫øm s·∫£n ph·∫©m kh√°c." />
        <meta name="robots" content="noindex, nofollow" />
      </Helmet>

      <div className="min-h-screen bg-gray-50">
        <Header />

        <div className="min-h-[calc(100vh-200px)] flex items-center justify-center py-12">
          <div className="max-w-2xl mx-auto text-center px-4">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
            >
              {/* 404 Animation */}
              <motion.div
                initial={{ scale: 0.8 }}
                animate={{ scale: 1 }}
                transition={{ duration: 0.5, delay: 0.2 }}
                className="mb-8"
              >
                <div className="text-8xl md:text-9xl font-bold text-primary-500 mb-4">
                  4
                  <motion.span
                    animate={{ rotate: [0, 10, -10, 0] }}
                    transition={{ duration: 2, repeat: Infinity, repeatDelay: 1 }}
                    className="inline-block"
                  >
                    üéÅ
                  </motion.span>
                  4
                </div>
              </motion.div>

              {/* Error Message */}
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ duration: 0.6, delay: 0.4 }}
                className="mb-8"
              >
                <h1 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
                  Oops! Trang kh√¥ng t·ªìn t·∫°i
                </h1>
                <p className="text-lg text-gray-600 mb-6 leading-relaxed">
                  Trang b·∫°n ƒëang t√¨m ki·∫øm c√≥ th·ªÉ ƒë√£ ƒë∆∞·ª£c di chuy·ªÉn, x√≥a ho·∫∑c kh√¥ng bao gi·ªù t·ªìn t·∫°i. 
                  Nh∆∞ng ƒë·ª´ng lo, ch√∫ng t√¥i c√≥ r·∫•t nhi·ªÅu m√≥n qu√† tuy·ªát v·ªùi kh√°c d√†nh cho b√©!
                </p>
                
                {/* Auto redirect notice */}
                <div className="inline-flex items-center px-4 py-2 bg-primary-50 border border-primary-200 rounded-lg text-primary-700">
                  <motion.div
                    animate={{ rotate: 360 }}
                    transition={{ duration: 1, repeat: Infinity, ease: "linear" }}
                    className="w-4 h-4 mr-2"
                  >
                    ‚è±Ô∏è
                  </motion.div>
                  <span className="text-sm">
                    T·ª± ƒë·ªông chuy·ªÉn v·ªÅ trang ch·ªß sau <strong>{countdown}</strong> gi√¢y
                  </span>
                </div>
              </motion.div>

              {/* Action Buttons */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.6 }}
                className="flex flex-col sm:flex-row gap-4 justify-center mb-12"
              >
                <button
                  onClick={() => navigate(-1)}
                  className="inline-flex items-center justify-center space-x-2 bg-gray-600 hover:bg-gray-700 text-white font-semibold py-3 px-6 rounded-xl transition-colors"
                >
                  <FiArrowLeft className="w-5 h-5" />
                  <span>Quay l·∫°i</span>
                </button>

                <Link
                  to="/"
                  className="inline-flex items-center justify-center space-x-2 bg-primary-500 hover:bg-primary-600 text-white font-semibold py-3 px-6 rounded-xl transition-colors"
                >
                  <FiHome className="w-5 h-5" />
                  <span>V·ªÅ trang ch·ªß</span>
                </Link>
              </motion.div>

              {/* Suggestions */}
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ duration: 0.6, delay: 0.8 }}
              >
                <h2 className="text-xl font-semibold text-gray-900 mb-6">
                  Ho·∫∑c b·∫°n c√≥ th·ªÉ:
                </h2>

                <div className="grid grid-cols-1 sm:grid-cols-3 gap-4 mb-8">
                  {suggestions.map((suggestion, index) => (
                    <motion.div
                      key={suggestion.title}
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ duration: 0.6, delay: 1 + index * 0.1 }}
                    >
                      <Link
                        to={suggestion.link}
                        className="block p-6 bg-white rounded-2xl shadow-soft hover:shadow-medium transition-all duration-300 group hover:-translate-y-1"
                      >
                        <div className={`w-12 h-12 ${suggestion.color} rounded-xl flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform`}>
                          {suggestion.icon}
                        </div>
                        <h3 className="font-semibold text-gray-900 mb-2">
                          {suggestion.title}
                        </h3>
                        <p className="text-sm text-gray-600">
                          {suggestion.description}
                        </p>
                      </Link>
                    </motion.div>
                  ))}
                </div>
              </motion.div>

              {/* Popular Categories */}
              {categories.length > 0 && (
                <motion.div
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ duration: 0.6, delay: 1.2 }}
                  className="mb-8"
                >
                  <h3 className="text-lg font-semibold text-gray-900 mb-4">
                    Danh m·ª•c ph·ªï bi·∫øn
                  </h3>
                  <div className="flex flex-wrap justify-center gap-3">
                    {categories.slice(0, 6).map((category) => (
                      <Link
                        key={category.id}
                        to={`/category/${category.id}`}
                        className="inline-flex items-center space-x-2 px-4 py-2 bg-white border border-gray-200 rounded-full hover:border-primary-300 hover:text-primary-600 transition-colors text-sm"
                      >
                        <span>{category.icon || 'üéÅ'}</span>
                        <span>{category.name}</span>
                      </Link>
                    ))}
                  </div>
                </motion.div>
              )}

              {/* Search Bar */}
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ duration: 0.6, delay: 1.4 }}
                className="mb-8"
              >
                <h3 className="text-lg font-semibold text-gray-900 mb-4">
                  Ho·∫∑c t√¨m ki·∫øm s·∫£n ph·∫©m
                </h3>
                <form 
                  onSubmit={(e) => {
                    e.preventDefault();
                    const query = e.target.search.value.trim();
                    if (query) {
                      navigate(`/products?search=${encodeURIComponent(query)}`);
                    }
                  }}
                  className="max-w-md mx-auto"
                >
                  <div className="relative">
                    <FiSearch className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                    <input
                      type="text"
                      name="search"
                      placeholder="T√¨m ki·∫øm s·∫£n ph·∫©m..."
                      className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-xl focus:ring-4 focus:ring-primary-200 focus:border-primary-500 transition-all"
                    />
                    <button
                      type="submit"
                      className="absolute right-2 top-1/2 transform -translate-y-1/2 bg-primary-500 hover:bg-primary-600 text-white px-4 py-2 rounded-lg transition-colors"
                    >
                      T√¨m
                    </button>
                  </div>
                </form>
              </motion.div>

              {/* Contact Support */}
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ duration: 0.6, delay: 1.6 }}
                className="text-center"
              >
                <p className="text-sm text-gray-500 mb-2">
                  V·∫´n kh√¥ng t√¨m th·∫•y nh·ªØng g√¨ b·∫°n c·∫ßn?
                </p>
                <div className="flex flex-col sm:flex-row gap-4 justify-center">
                  <a
                    href="mailto:support@newborngifts.vn"
                    className="text-primary-600 hover:text-primary-700 font-medium text-sm transition-colors"
                  >
                    üìß support@newborngifts.vn
                  </a>
                  <a
                    href="tel:1900xxxx"
                    className="text-primary-600 hover:text-primary-700 font-medium text-sm transition-colors"
                  >
                    üìû 1900-xxxx
                  </a>
                </div>
              </motion.div>
            </motion.div>
          </div>
        </div>

        <Footer />
      </div>
    </>
  );
};

export default NotFound;